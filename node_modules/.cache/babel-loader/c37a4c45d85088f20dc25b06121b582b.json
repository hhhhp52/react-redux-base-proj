{"ast":null,"code":"var _jsxFileName = \"/Users/schnee/project/react-redux-base/src/pages/tab1/Tab1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { Divider, Grid, Typography } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport _ from 'lodash';\nimport { fetchIpInfo } from '../../actions/tab1Action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  main: {\n    display: 'flex',\n    width: '100%',\n    height: '100vh',\n    backgroundColor: '#f5f5f5'\n  },\n  mainContainer: {\n    borderRadius: 10,\n    padding: '40px 50px',\n    height: '570px',\n    width: '40%',\n    backgroundColor: '#FFF',\n    boxShadow: '0px 0px 20px rgba(0, 115, 250, 0.1)'\n  }\n}));\n\nconst Tab1 = props => {\n  _s();\n\n  const classes = useStyles(); //change route (history.push('/'))\n\n  const history = useHistory(); //get theme\n\n  const theme = useSelector(state => state.theme);\n  const themeSelected = useSelector(state => state.themeSelected); //using redux \n\n  const dispatch = useDispatch(); //using selector to retreive store \n\n  const ipInfo = useSelector(state => state.ipInfo); //get ip info when first loading\n\n  useEffect(() => {\n    dispatch(fetchIpInfo());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    className: classes.main,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"flex-start\",\n      className: classes.mainContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" \", 'Request https://api.db-ip.com/v2/free/self to get self ip address.', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          width: '100%',\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" \", 'Response info: ', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          marginTop: '20px'\n        },\n        children: _.isEmpty(ipInfo) === false ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" \", `Ip addrss: ${ipInfo}`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" \", `Loading...`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 109\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tab1, \"3VEsX/3hMYTviWyfOTcZCrWw9f0=\", false, function () {\n  return [useStyles, useHistory, useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = Tab1;\nexport default Tab1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tab1\");","map":{"version":3,"sources":["/Users/schnee/project/react-redux-base/src/pages/tab1/Tab1.tsx"],"names":["React","useEffect","useSelector","useDispatch","useHistory","Divider","Grid","Typography","makeStyles","createStyles","_","fetchIpInfo","useStyles","theme","main","display","width","height","backgroundColor","mainContainer","borderRadius","padding","boxShadow","Tab1","props","classes","history","state","themeSelected","dispatch","ipInfo","marginTop","isEmpty"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from '../../reducers/index'\nimport {\n    Divider,\n    Grid, Typography,\n} from '@material-ui/core';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport { fetchIpInfo } from '../../actions/tab1Action';\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        main: {\n            display: 'flex',\n            width: '100%',\n            height: '100vh',\n            backgroundColor: '#f5f5f5'\n        },\n        mainContainer: {\n            borderRadius:10,\n            padding: '40px 50px',\n            height: '570px',\n            width: '40%',\n            backgroundColor: '#FFF',\n            boxShadow: '0px 0px 20px rgba(0, 115, 250, 0.1)'\n        }\n    })\n);\n\n\nconst Tab1 = (props:Props) :React.ReactElement<Props>  =>  {\n\n    const classes = useStyles()\n\n    //change route (history.push('/'))\n    const history = useHistory()\n\n    //get theme\n    const theme: {[key: string]: {[key: string]:string}}  = useSelector((state: RootState) => state.theme)\n    const themeSelected: string = useSelector((state: RootState) => state.themeSelected)\n    \n    //using redux \n    const dispatch = useDispatch()\n\n    //using selector to retreive store \n    const ipInfo: any = useSelector((state: RootState) => state.ipInfo)\n    \n    //get ip info when first loading\n    useEffect(() =>\n    {\n        dispatch(fetchIpInfo())\n    },[])\n\n    return (\n        <Grid container direction='column' justifyContent='center' alignItems='center' className={classes.main}>\n            <Grid container direction='column'  alignItems='flex-start' className={classes.mainContainer}>\n                <Grid item >\n                    <Typography> {'Request https://api.db-ip.com/v2/free/self to get self ip address.'} </Typography>   \n                </Grid>\n                <Divider style={{ width: '100%',marginTop:'20px' }}/>\n                <Grid item style={{marginTop:'20px'}}>\n                    <Typography> {'Response info: '} </Typography>   \n                </Grid>\n   \n                <Grid item style={{ marginTop: '20px' }}>\n                    {\n                        _.isEmpty(ipInfo) === false ? <Typography> {`Ip addrss: ${ipInfo}`} </Typography> : <Typography> {`Loading...`} </Typography>\n                    }  \n                </Grid>\n            </Grid>\n        </Grid>\n\n    )\n}\n\nexport default Tab1"]},"metadata":{},"sourceType":"module"}