{"ast":null,"code":"var _jsxFileName = \"/Users/schnee/project/react-redux-base/src/pages/login/LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Button, TextField, InputAdornment, Typography } from '@material-ui/core';\nimport { Checkbox } from '@mui/material';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport _ from 'lodash';\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  main: {\n    display: 'flex',\n    width: '100%',\n    height: '100vh',\n    backgroundColor: '#f5f5f5'\n  },\n  mainContainer: {\n    borderRadius: 10,\n    padding: '40px 50px',\n    height: '570px',\n    width: '500px',\n    backgroundColor: '#FFF',\n    boxShadow: '0px 0px 20px rgba(0, 115, 250, 0.1)'\n  },\n  loginWord: {\n    fontSize: '30px',\n    color: '#C17767',\n    fontWeight: 800,\n    fontFamily: 'Lato, Noto Sans TC'\n  },\n  h1: {\n    fontSize: '14px',\n    color: '#9e9e9e',\n    fontWeight: 800,\n    fontFamily: 'Lato, Noto Sans TC'\n  },\n  serachInput: {\n    [`& fieldset`]: {\n      borderRadius: 5\n    }\n  },\n  selectBorder: {\n    borderColor: \"transparent !important\"\n  },\n  changeButton: {\n    borderRadius: 5,\n    color: '#FFF',\n    backgroundColor: '#5A91FF',\n    width: '100%',\n    height: '40px',\n    boxShadow: 'none',\n    '&:hover': {\n      backgroundColor: '#5A91FF',\n      boxShadow: 'none'\n    }\n  }\n}));\n\nconst LoginPage = props => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const theme = useSelector(state => state.theme);\n  const themeSelected = useSelector(state => state.themeSelected);\n  const dispatch = useDispatch();\n\n  const changePassword = (password, confirmPassword) => {\n    //dispatch()\n    console.log(password, confirmPassword);\n  };\n\n  const [password, setPassword] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [emailError, setEmailError] = React.useState(false);\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [needResetPassword, setNeedResetPassword] = React.useState(false); //confirm page\n\n  const [resetPassword, setResetPassword] = React.useState('');\n  const [resetConfirmPassword, setResetConfirmPassword] = React.useState('');\n  const [resetPasswordError, setResetPasswordError] = React.useState(false);\n  const [resetConfirmPasswordError, setResetConfirmPasswordError] = React.useState(false);\n\n  const emailEvent = email => {\n    if (email.length === 0) {\n      setEmailError(false);\n    } else if (validateEmail(email) === null) {\n      setEmailError(true);\n    } else {\n      setEmailError(false);\n    }\n\n    setEmail(email);\n  };\n\n  const passwordEvent = password => {\n    if (password.length === 0) {\n      setPasswordError(false);\n    }\n\n    setPassword(password);\n  };\n\n  const validateEmail = email => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n\n  const resetPasswordEvent = (password, confirmPassword) => {\n    if (password.length === 0) {\n      setResetPasswordError(false);\n    } else if (password.length < 8) {\n      setResetPasswordError(true);\n    } else {\n      setResetPasswordError(false);\n    }\n\n    if (_.isEqual(password, confirmPassword) === false) {\n      setResetConfirmPasswordError(true);\n    }\n\n    setResetPassword(password);\n  };\n\n  const comfirmPasswordEvent = (password, confirmPassword) => {\n    if (confirmPassword.length === 0) {\n      setResetConfirmPasswordError(false);\n    } else if (_.isEqual(password, confirmPassword) === false) {\n      setResetConfirmPasswordError(true);\n    } else {\n      setResetConfirmPasswordError(false);\n    }\n\n    setResetConfirmPassword(confirmPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: needResetPassword === false ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: classes.main,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        className: classes.mainContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontFamily: 'Noto sans',\n                  fontSize: '28px',\n                  fontWeight: 600\n                },\n                children: 'Sign in'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                marginTop: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontFamily: 'Noto sans',\n                  fontSize: '16px',\n                  fontWeight: 500,\n                  color: '#989898'\n                },\n                children: 'Enter your credentials to access your account.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              direction: \"column\",\n              style: {\n                marginTop: '20px',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    fontFamily: 'Noto sans',\n                    fontSize: '16px',\n                    fontWeight: 600\n                  },\n                  children: 'Email address'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  marginTop: '4px'\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: emailError,\n                  value: email,\n                  onChange: event => emailEvent(event.target.value),\n                  placeholder: \"Enter your email\",\n                  variant: 'outlined',\n                  className: classes.serachInput,\n                  InputProps: {\n                    type: 'input',\n                    style: {\n                      height: '40px',\n                      fontSize: '14px',\n                      width: '400px',\n                      padding: '0px 0px 0px 10px',\n                      backgroundColor: '#F3F3F3',\n                      marginRight: '20px',\n                      fontFamily: 'Noto sans'\n                    },\n                    classes: {\n                      notchedOutline: classes.selectBorder\n                    },\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(EmailIcon, {\n                        style: {\n                          fill: '#5A91FF'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 53\n                    }, this)\n                  },\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), emailError ? /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  marginTop: '4px',\n                  color: '#FE2D53',\n                  fontFamily: 'Noto sans',\n                  fontSize: '14px'\n                },\n                children: 'Please enter the correct mail format.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 45\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              direction: \"column\",\n              style: {\n                marginTop: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    fontFamily: 'Noto sans',\n                    fontSize: '16px',\n                    fontWeight: 600\n                  },\n                  children: 'Password'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  marginTop: '4px'\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: passwordError,\n                  value: password,\n                  onChange: event => passwordEvent(event.target.value),\n                  placeholder: \"Enter your password\",\n                  variant: 'outlined',\n                  className: classes.serachInput,\n                  InputProps: {\n                    type: showPassword ? 'input' : 'password',\n                    style: {\n                      height: '40px',\n                      fontSize: '14px',\n                      width: '400px',\n                      padding: '0px 0px 0px 10px',\n                      backgroundColor: '#F3F3F3',\n                      marginRight: '20px',\n                      fontFamily: 'Noto sans'\n                    },\n                    classes: {\n                      notchedOutline: classes.selectBorder\n                    },\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(LockOpenIcon, {\n                        style: {\n                          fill: '#5A91FF'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 53\n                    }, this)\n                  },\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), passwordError ? /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  color: '#FE2D53',\n                  fontFamily: 'Noto sans',\n                  fontSize: '14px'\n                },\n                children: \"Wrong password.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 41\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                sx: {\n                  '&:hover': {\n                    bgcolor: 'transparent'\n                  },\n                  marginLeft: '-10px'\n                },\n                onChange: () => setShowPassword(!showPassword),\n                disableRipple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontSize: '16px',\n                  fontFamily: 'Noto sans'\n                },\n                children: 'Show password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => history.push('/tab1'),\n            className: classes.changeButton,\n            children: 'Sign in'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: classes.main,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        className: classes.mainContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontFamily: 'Noto sans',\n                  fontSize: '28px',\n                  fontWeight: 600\n                },\n                children: 'Resetting password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                marginTop: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontFamily: 'Noto sans',\n                  fontSize: '16px',\n                  fontWeight: 500,\n                  color: '#989898'\n                },\n                children: 'Please reset your password.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              direction: \"column\",\n              style: {\n                marginTop: '20px',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    fontFamily: 'Noto sans',\n                    fontSize: '16px',\n                    fontWeight: 600\n                  },\n                  children: 'New password'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  marginTop: '4px'\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: resetPasswordError,\n                  value: resetPassword,\n                  onChange: event => resetPasswordEvent(event.target.value, resetConfirmPassword),\n                  placeholder: \"Please enter a password\",\n                  variant: 'outlined',\n                  className: classes.serachInput,\n                  InputProps: {\n                    type: 'password',\n                    style: {\n                      height: '40px',\n                      fontSize: '14px',\n                      width: '400px',\n                      padding: '0px 0px 0px 5px',\n                      backgroundColor: '#F3F3F3',\n                      marginRight: '20px',\n                      fontFamily: 'Noto sans'\n                    },\n                    classes: {\n                      notchedOutline: classes.selectBorder\n                    }\n                  },\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this), passwordError ? /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  marginTop: '4px',\n                  color: '#FE2D53',\n                  fontFamily: 'Noto sans',\n                  fontSize: '14px'\n                },\n                children: 'The password must be at least 8 characters long.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 45\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              direction: \"column\",\n              style: {\n                marginTop: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    fontFamily: 'Noto sans',\n                    fontSize: '16px',\n                    fontWeight: 600\n                  },\n                  children: 'Comfirm password'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  marginTop: '4px'\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: resetConfirmPasswordError,\n                  value: resetConfirmPassword,\n                  onChange: event => comfirmPasswordEvent(resetPassword, event.target.value),\n                  placeholder: \"Please re-type the password to confirm\",\n                  variant: 'outlined',\n                  className: classes.serachInput,\n                  InputProps: {\n                    type: 'password',\n                    style: {\n                      height: '40px',\n                      fontSize: '14px',\n                      width: '400px',\n                      padding: '0px 0px 0px 5px',\n                      backgroundColor: '#F3F3F3',\n                      marginRight: '20px',\n                      fontFamily: 'Noto sans'\n                    },\n                    classes: {\n                      notchedOutline: classes.selectBorder\n                    }\n                  },\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 37\n              }, this), resetConfirmPasswordError ? /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  color: '#FE2D53',\n                  fontFamily: 'Noto sans',\n                  fontSize: '14px'\n                },\n                children: \"New password and confirm password doesn't match.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 41\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: resetPasswordError || resetConfirmPasswordError || resetPassword.length === 0 || resetConfirmPassword.length === 0,\n            onClick: () => console.log('hi'),\n            className: classes.changeButton,\n            children: 'Confirm'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginPage, \"IinpeMT8QYLM0zhpdmXryJkFo0c=\", false, function () {\n  return [useStyles, useHistory, useSelector, useSelector, useDispatch];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/schnee/project/react-redux-base/src/pages/login/LoginPage.tsx"],"names":["React","useSelector","useDispatch","useHistory","Grid","Button","TextField","InputAdornment","Typography","Checkbox","makeStyles","createStyles","_","EmailIcon","LockOpenIcon","useStyles","theme","main","display","width","height","backgroundColor","mainContainer","borderRadius","padding","boxShadow","loginWord","fontSize","color","fontWeight","fontFamily","h1","serachInput","selectBorder","borderColor","changeButton","LoginPage","props","classes","history","state","themeSelected","dispatch","changePassword","password","confirmPassword","console","log","setPassword","useState","email","setEmail","passwordError","setPasswordError","emailError","setEmailError","showPassword","setShowPassword","needResetPassword","setNeedResetPassword","resetPassword","setResetPassword","resetConfirmPassword","setResetConfirmPassword","resetPasswordError","setResetPasswordError","resetConfirmPasswordError","setResetConfirmPasswordError","emailEvent","length","validateEmail","passwordEvent","String","toLowerCase","match","resetPasswordEvent","isEqual","comfirmPasswordEvent","marginTop","event","target","value","type","style","marginRight","notchedOutline","startAdornment","fill","bgcolor","marginLeft","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from '../../reducers/index'\nimport {\n    Grid,\n    Button,\n    TextField,\n    InputAdornment,\n    Typography\n} from '@material-ui/core';\n\nimport { Checkbox } from '@mui/material';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        main: {\n            display: 'flex',\n            width: '100%',\n            height: '100vh',\n            backgroundColor: '#f5f5f5'\n        },\n        mainContainer: {\n            borderRadius:10,\n            padding: '40px 50px',\n            height: '570px',\n            width: '500px',\n            backgroundColor: '#FFF',\n            boxShadow: '0px 0px 20px rgba(0, 115, 250, 0.1)'\n        },\n        loginWord: {\n            fontSize:'30px',\n            color:'#C17767',\n            fontWeight: 800,\n            fontFamily:'Lato, Noto Sans TC'\n        },\n        h1: {\n            fontSize:'14px',\n            color:'#9e9e9e',\n            fontWeight: 800,\n            fontFamily:'Lato, Noto Sans TC'\n        },\n        serachInput: {\n            [`& fieldset`]: {\n                borderRadius: 5,\n            },\n        },\n        selectBorder:{\n            borderColor: \"transparent !important\"\n        },\n        changeButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor: '#5A91FF',\n            width:'100%',\n            height:'40px',\n            boxShadow:'none',\n            '&:hover': {\n                backgroundColor:'#5A91FF',\n                boxShadow:'none'\n            },\n        },\n    })\n);\n\n\nconst LoginPage = (props:Props) :React.ReactElement<Props>  =>  {\n\n    const classes = useStyles()\n    const history = useHistory()\n    const theme: {[key: string]: {[key: string]:string}}  = useSelector((state: RootState) => state.theme)\n    const themeSelected :string = useSelector((state: RootState) => state.themeSelected)\n    const dispatch = useDispatch()\n\n    const changePassword = (password:string, confirmPassword:string) =>\n    {\n        //dispatch()\n        console.log(password, confirmPassword)\n        \n    }\n\n    const [password, setPassword] = React.useState<string>('');\n    const [email, setEmail] = React.useState<string>('');\n    const [passwordError, setPasswordError] = React.useState<boolean>(false);\n    const [emailError, setEmailError] = React.useState<boolean>(false);\n    const [showPassword, setShowPassword] = React.useState<boolean>(false);\n    const [needResetPassword, setNeedResetPassword] = React.useState<boolean>(false);\n\n    //confirm page\n    const [resetPassword, setResetPassword] = React.useState<string>('');\n    const [resetConfirmPassword, setResetConfirmPassword] = React.useState<string>('');\n    const [resetPasswordError, setResetPasswordError] = React.useState<boolean>(false);\n    const [resetConfirmPasswordError, setResetConfirmPasswordError] = React.useState<boolean>(false);\n\n    const emailEvent = (email: string) =>\n    {\n        if (email.length === 0)\n        {\n            setEmailError(false)\n        }\n        else if ( validateEmail(email) === null)\n        {\n            setEmailError(true)\n        }\n        else\n        {\n            setEmailError(false)\n        }\n        setEmail(email)\n    }\n\n    const passwordEvent = (password: string) =>\n    {\n        if (password.length === 0)\n        {\n            setPasswordError(false)\n        }\n        setPassword(password)\n    }\n\n    const validateEmail = (email:string) => {\n        return String(email)\n            .toLowerCase()\n            .match(\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    };\n\n    const resetPasswordEvent = (password:string, confirmPassword: string) =>\n    {\n        if (password.length === 0)\n        {\n            setResetPasswordError(false)\n        }\n        else if (password.length < 8)\n        {\n            setResetPasswordError(true)\n        }\n        else\n        {\n            setResetPasswordError(false)\n        }\n\n        if(_.isEqual(password, confirmPassword) === false)\n        {\n            setResetConfirmPasswordError(true)\n        }\n\n            setResetPassword(password)\n        }\n    \n    const comfirmPasswordEvent = (password:string, confirmPassword: string) =>\n    {\n        if (confirmPassword.length === 0)\n        {\n            setResetConfirmPasswordError(false)\n        }\n        else if (_.isEqual(password, confirmPassword) === false)\n        {\n            setResetConfirmPasswordError(true)\n        }\n        else\n        {\n            setResetConfirmPasswordError(false)\n        }\n        setResetConfirmPassword(confirmPassword)\n    }\n    \n\n    return (\n        <>\n            {needResetPassword === false ? \n                <Grid container direction='column' justifyContent='center' alignItems='center' className={classes.main}>\n                    <Grid container direction='column' justifyContent='space-between' alignItems='center' className={classes.mainContainer}>\n                        <Grid item style={{width:'100%'}}>\n                            <Grid container direction='column' alignItems='center' >\n                                <Grid item>\n                                    <Typography style={{fontFamily:'Noto sans', fontSize:'28px',fontWeight:600}}>{'Sign in'}</Typography>\n                                </Grid>\n                                <Grid item style={{marginTop:'10px'}}>\n                                    <Typography  style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:500,color:'#989898'}}>{'Enter your credentials to access your account.'}</Typography>\n                                </Grid>\n                                <Grid item container direction='column' style={{marginTop:'20px',width:'100%'}}>\n                                    <Grid item>\n                                        <Typography style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:600}}>{'Email address'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{marginTop:'4px'}}>\n                                        <TextField\n                                            error={emailError}\n                                            value={email}\n                                            onChange={(event)=> emailEvent(event.target.value)}    \n                                            placeholder='Enter your email'\n                                            variant={'outlined'}\n                                            className={classes.serachInput}\n                                            InputProps={{\n                                                type: 'input',\n                                                style: {\n                                                    height:'40px',\n                                                    fontSize:'14px',\n                                                    width:'400px',\n                                                    padding:'0px 0px 0px 10px',\n                                                    backgroundColor:'#F3F3F3',\n                                                    marginRight: '20px',\n                                                    fontFamily:'Noto sans'\n                                                },\n                                                classes: {\n                                                    notchedOutline: classes.selectBorder\n                                                },\n                                                startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                        <EmailIcon style={{fill:'#5A91FF'}}/>\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                            size=\"small\"\n                                            />\n                                    </Grid>\n                                        {emailError ?\n                                            <Typography  style={{marginTop:'4px',color:'#FE2D53', fontFamily:'Noto sans', fontSize:'14px'}}>{'Please enter the correct mail format.'}</Typography> : ''}\n                                </Grid>    \n                                <Grid item container direction='column' style={{marginTop:'10px'}}>\n                                    <Grid item>\n                                        <Typography  style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:600}}>{'Password'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{marginTop:'4px'}}>\n                                        <TextField\n                                            error={passwordError}\n                                            value={password}\n                                            onChange={(event)=> passwordEvent(event.target.value)}    \n                                            placeholder='Enter your password'\n                                            variant={'outlined'}\n                                            className={classes.serachInput}\n                                            InputProps={{\n                                                type: showPassword? 'input' : 'password',\n                                                style: {\n                                                    height:'40px',\n                                                    fontSize:'14px',\n                                                    width:'400px',\n                                                    padding:'0px 0px 0px 10px',\n                                                    backgroundColor:'#F3F3F3',\n                                                    marginRight: '20px',\n                                                    fontFamily:'Noto sans'\n                                                },\n                                                classes: {\n                                                    notchedOutline: classes.selectBorder\n                                                },\n                                                startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                        <LockOpenIcon style={{fill:'#5A91FF'}}/>\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                            size=\"small\"\n                                        />\n                                    </Grid>    \n                                        {passwordError ?\n                                        <Typography style={{color:'#FE2D53', fontFamily:'Noto sans', fontSize:'14px'}}>{ \"Wrong password.\"}</Typography> : ''}\n                                </Grid>    \n                                <Grid item container alignItems='center'>\n                                    <Checkbox sx={{\n                                            '&:hover': { bgcolor: 'transparent' },\n                                            marginLeft:'-10px'\n                                    }}\n                                        onChange={()=> setShowPassword(!showPassword)}\n                                        disableRipple/>\n                                    <Typography style={{fontSize:'16px', fontFamily:'Noto sans'}}>{'Show password'}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item style={{width:'100%'}}>\n                                <Button onClick={()=> history.push('/tab1')}  className={classes.changeButton}>{'Sign in'}</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                :\n                <Grid container direction='column' justifyContent='center' alignItems='center' className={classes.main}>\n                    <Grid container direction='column' justifyContent='space-between' alignItems='center' className={classes.mainContainer}>\n                        <Grid item style={{width:'100%'}}>\n                            <Grid container direction='column' alignItems='center'>\n                                <Grid item>\n                                    <Typography style={{fontFamily:'Noto sans', fontSize:'28px',fontWeight:600}}>{'Resetting password'}</Typography>\n                                </Grid>\n                                <Grid item style={{marginTop:'10px'}}>\n                                    <Typography  style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:500,color:'#989898'}}>{'Please reset your password.'}</Typography>\n                                </Grid>\n                                <Grid item container direction='column' style={{marginTop:'20px',width:'100%'}}>\n                                    <Grid item>\n                                        <Typography style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:600}}>{'New password'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{marginTop:'4px'}}>\n                                        <TextField\n                                            error={resetPasswordError}\n                                            value={resetPassword}\n                                            onChange={(event)=> resetPasswordEvent(event.target.value, resetConfirmPassword)}    \n                                            placeholder='Please enter a password'\n                                            variant={'outlined'}\n                                            className={classes.serachInput}\n                                            InputProps={{\n                                                type: 'password',\n                                                style: {\n                                                    height:'40px',\n                                                    fontSize:'14px',\n                                                    width:'400px',\n                                                    padding:'0px 0px 0px 5px',\n                                                    backgroundColor:'#F3F3F3',\n                                                    marginRight: '20px',\n                                                    fontFamily:'Noto sans'\n                                                },\n                                                classes: {\n                                                    notchedOutline: classes.selectBorder\n                                                }\n                                            }}\n                                            size=\"small\"\n                                            />\n                                    </Grid>\n                                        {passwordError ?\n                                            <Typography  style={{marginTop:'4px',color:'#FE2D53', fontFamily:'Noto sans', fontSize:'14px'}}>{'The password must be at least 8 characters long.'}</Typography> : ''}\n                                </Grid>    \n                                <Grid item container direction='column' style={{marginTop:'10px'}}>\n                                    <Grid item>\n                                        <Typography  style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:600}}>{'Comfirm password'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{marginTop:'4px'}}>\n                                        <TextField\n                                            error={resetConfirmPasswordError}\n                                            value={resetConfirmPassword}\n                                            onChange={(event)=> comfirmPasswordEvent(resetPassword, event.target.value)}    \n                                            placeholder='Please re-type the password to confirm'\n                                            variant={'outlined'}\n                                            className={classes.serachInput}\n                                            InputProps={{\n                                                type: 'password',\n                                                style: {\n                                                    height:'40px',\n                                                    fontSize:'14px',\n                                                    width:'400px',\n                                                    padding:'0px 0px 0px 5px',\n                                                    backgroundColor:'#F3F3F3',\n                                                    marginRight: '20px',\n                                                    fontFamily:'Noto sans'\n                                                },\n                                                classes: {\n                                                    notchedOutline: classes.selectBorder\n                                                }\n                                            }}\n                                            size=\"small\"\n                                        />\n                                    </Grid>    \n                                        {resetConfirmPasswordError ?\n                                        <Typography style={{color:'#FE2D53', fontFamily:'Noto sans', fontSize:'14px'}}>{ \"New password and confirm password doesn't match.\"}</Typography> : ''}\n                                </Grid>    \n                            </Grid>\n                        </Grid>\n                        <Grid item style={{width:'100%'}}>\n                            <Button disabled={resetPasswordError || resetConfirmPasswordError || resetPassword.length === 0 || resetConfirmPassword.length === 0 } onClick={()=> console.log('hi')} className={classes.changeButton}>{'Confirm'}</Button>\n                        </Grid>\n                    </Grid>\n            </Grid>\n            }\n\n        </>\n\n    )\n}\n\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}